#ifndef ${CPP_NAMESPACE}_version_info_h
#define ${CPP_NAMESPACE}_version_info_h

#include <cstdint>
#include <string>
#include <string_view>
#include "build_type.h"

namespace ${CPP_NAMESPACE}
{
	namespace version
    {
        uint32_t major() noexcept;
        uint32_t minor() noexcept;
        uint32_t patch() noexcept;
        uint32_t tweak() noexcept;
        std::string_view str() noexcept;
    }  // namespace version

    namespace git
    {
        bool dirty() noexcept;
        std::string_view sha1() noexcept;
        std::string_view branch() noexcept;
    }  // namespace git

    eBuildType build_type() noexcept;
    std::string_view build_type_str() noexcept;
    std::string_view version_info() noexcept;
}  // namespace ${CPP_NAMESPACE}

#endif /* ${CPP_NAMESPACE}_version_info_h */
